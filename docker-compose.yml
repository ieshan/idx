services:
  # Fast unit tests only - no database dependencies
  unit-tests:
    image: golang:1.24.5-bookworm
    volumes:
      - "./:/app"
    working_dir: "/app"
    command: sh -c "go mod download && echo '=== Running Unit Tests (Fast) ===' && go test -v"
    profiles: ["unit"]

  # Integration tests with all databases - using workspace
  integration-tests:
    image: golang:1.24.5-bookworm
    volumes:
      - "./:/app"
    networks:
      - idx-network
    working_dir: "/app"
    depends_on:
      mongo:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mariadb:
        condition: service_healthy
    command: sh -c "go mod download && cd integration-tests && go mod download && echo '=== Running Integration Tests (With Databases) ===' && go test -v"
    profiles: ["integration"]

  # Run all tests (unit + integration) - using workspace
  all-tests:
    image: golang:1.24.5-bookworm
    volumes:
      - "./:/app"
    networks:
      - idx-network
    working_dir: "/app"
    depends_on:
      mongo:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mariadb:
        condition: service_healthy
    command: sh -c "go mod download && cd integration-tests && go mod download && cd .. && echo '=== Running Unit Tests ===' && go test -v && echo '=== Running Integration Tests ===' && cd integration-tests && go test -v && echo '=== All Tests Completed Successfully! ==='"
    profiles: ["all"]
  # Database services with health checks
  postgres:
    image: postgres:17.5-alpine3.22
    restart: always
    environment:
      POSTGRES_PASSWORD: password
    networks:
      - idx-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  mariadb:
    image: mariadb:11.8.2-ubi9
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: password
    networks:
      - idx-network
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:8.0.11-noble
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - idx-network
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  idx-network:
    driver: bridge

